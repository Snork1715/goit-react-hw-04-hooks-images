{"version":3,"sources":["components/Skeleton/Skeleton.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/FetchImage.js","App.js","index.js"],"names":["Skeleton","className","type","color","height","width","timeout","Searchbar","onSubmit","useState","imagesType","setImageType","event","preventDefault","trim","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","modalRoot","document","getElementById","Modal","onClose","bigImage","useEffect","window","addEventListener","handleEscClose","removeEventListener","code","createPortal","onClick","target","src","alt","ImageGalleryItem","webformatURL","showModal","setShowModal","toggleModal","prev","ImageGallery","images","map","image","largeImageURL","id","Button","api","fetchImage","page","baseURL","fetch","then","Response","ok","json","Promise","reject","Error","App","setImages","loading","setLoading","setImagesType","error","setError","setPage","setTimeout","FetchImages","hits","catch","finally","prevImages","imType","message","length","prevPage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2d27b595.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport \"./Skeleton.css\";\r\n\r\nexport default function Skeleton() {\r\n  return (\r\n    <Loader\r\n      className=\"Skeleton\"\r\n      type=\"Circles\"\r\n      color=\"#006eff\"\r\n      height={40}\r\n      width={40}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./Searchbar.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imagesType, setImageType] = useState(\"\");\r\n\r\n  const handleClick = (event) => {\r\n    setImageType(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (imagesType.trim() === \"\") {\r\n      return;\r\n    }\r\n    onSubmit(imagesType);\r\n    setImageType(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={imagesType}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleClick}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nexport default function Modal({ onClose, bigImage }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleEscClose);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleEscClose);\r\n    };\r\n  });\r\n\r\n  const handleEscClose = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n      <div className=\"Modal\">\r\n        <img src={bigImage} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./ImageGalleryItem.css\";\r\nimport Modal from \"../Modal\";\r\n\r\nexport default function ImageGalleryItem({ webformatURL, bigImage }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className=\"ImageGalleryItem\" onClick={toggleModal}>\r\n        <img className=\"ImageGalleryItem-image\" src={webformatURL} alt=\"\" />\r\n      </li>\r\n      {showModal && <Modal onClose={toggleModal} bigImage={bigImage} />}\r\n    </>\r\n  );\r\n}\r\n","import ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport \"./ImageGallery.css\";\r\n\r\nexport default function ImageGallery({ images }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          webformatURL={image.webformatURL}\r\n          bigImage={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import \"./Button.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const APIkey = \"24369535-8c0b0d7fa83b493b4b387e45e\";\r\n\r\nfunction fetchImage(type, page) {\r\n  const baseURL = `https://pixabay.com/api/?q=${type}&page=${page}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(baseURL).then((Response) => {\r\n    if (Response.ok) {\r\n      return Response.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`Выбран некорректный тип фотографий ${type}`)\r\n    );\r\n  });\r\n}\r\n\r\nconst api = { fetchImage };\r\n\r\nexport default api;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Skeleton from \"./components/Skeleton\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport FetchImages from \"./services/FetchImage\";\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [imagesType, setImagesType] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (imagesType && page === 1) {\n      setImages([]);\n      setLoading(true);\n      setTimeout(() => {\n        FetchImages.fetchImage(imagesType, page)\n          .then(({ hits }) => {\n            setImages(hits);\n          })\n          .catch((error) => setError(error))\n          .finally(() => {\n            setLoading(false);\n          });\n      }, 1000);\n    }\n  }, [imagesType, page]);\n\n  useEffect(() => {\n    if (page !== 1) {\n      setLoading(true);\n      setTimeout(() => {\n        FetchImages.fetchImage(imagesType, page)\n          .then(({ hits }) =>\n            setImages((prevImages) => [...prevImages, ...hits])\n          )\n          .finally(() => {\n            setLoading(false);\n          });\n      }, 1500);\n    }\n  }, [imagesType, page]);\n\n  const getImageType = (imType) => {\n    setImagesType(imType);\n    setPage(1);\n  };\n\n  const handleLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={getImageType} />\n      {error && <div>{error.message}</div>}\n      {loading && <Skeleton />}\n      <ImageGallery images={images} />\n      {images.length !== 0 && !loading ? (\n        <Button onClick={handleLoadMore} />\n      ) : images.length !== 0 && loading ? (\n        <Skeleton />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}